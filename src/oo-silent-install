########################################
####
#### General Properties
####

### Root directory of the installation
# root.dir=
# On Windows, the path must be with / or with \\
# Example (Windows): root.dir=c:/Program Files/Hewlett-Packard/HP Operations Orchestration
# Example (Linux): root.dir=/usr/local/hp/oo 

### What to install

# install.java=
# Valid values: true, false
# Default: true
# This is required. You should only set this to false if Java Runtime has already been installed in the target directory.

# install.ras=
# Valid values: true, false
# Default: false

# install.central=
# Valid values: true, false
# Default: true

# install.studio=
# Valid values: true, false
# Default: false

# install.docs=
# Valid values: true, false
# Default: true

### Central server ports
# http.port=
# Default: 8080
# https.port=
# Default: 8443


### HTTP port access 
# http.port.access=enable
# Options: enable (HTTP access is enabled)
# Options: disable (HTTP access is disabled)
# Default: http.port.access=enable
# HP recommends to disable the HTTP port and to use a TLS certificate for security reasons.  


### Whether to start Central after the installation
# should.start.central=
# Valid values: true, false
# If you are configuring HP OO to be compliant with FIPS 140-2, this must be set to false.
# If you are installing a new Central in cluster mode and the installer version is older 
# than the current Central, this must be set to false.
# If you are upgrading from 9.x OR installing a RAS together with Central, Central will be 
# started, regardless of how this property is set.


### Select a supported language for HP Operations Orchestration, in addition to English.
# language=
# Valid values: en, fr, de, ja, es, ch
# Default: en
# This configures the language for Central and Studio in the Studio.properties and central-wrapper.conf files. 
# For Central, this also changes the database schema language for SQL Server. 



########################################
####
#### Properties Relevant to the First Installed Central in a Cluster, or to a Standalone Central
####


####### Central server database properties

### Define the database type
# db.type=
# Valid values: oracle, postgresql, mysql, mssql, h2, and other. 
# Default value: h2
# For db.type=mysql, db.driver.location MUST be set to the path of a MySQL JDBC driver (a JAR
# file). It is also available for db.type=other.
# For db.type=H2, this uses an H2 local database. This should not be used for production.
# For db.type=other, use to enable advanced features in supported databases. If you select 
# other, you can only use a database type that is supported for use with HP OO. See the 
# System Requirements for more information.

### Define the database driver
# db.driver=
# Resolved automatically from db.type, but can be overridden. 
# Linkage: If db.type is other, this property is required.


### Define the location of the database JDBC driver 
# db.driver.location=
# Linkage: Required when db.type=mysql or db.type=other. Required for mySQL even when adding a node to a cluster.
# Example: db.driver.location=c:/tmp/mydriver.jar
# Note: This path is an example only. There is no need to create a tmp directory.

### Define the database JDBC URL
# db.url=
# This is optional. Set this value if you want advanced features supported by the driver. 
# Linkage: If you set this property, the db.host, db.port, db.name and db.service.name properties are ignored.
# MySQL example: db.url=jdbc:mysql://<host>:<port>/<db.name>
# Oracle example with SID: db.url=jdbc:oracle:thin:@<host>:<port>:<sid>
# Oracle example with service name: db.url=jdbc:oracle:thin:@//<host>:<port>/<service.name>
# PostgreSQL example: db.url=jdbc:postgresql://<host>:<port>/<db.name>
# MS Sql example: db.url=jdbc:jtds:sqlserver://<host>:<port>/<db.name>


### Define the database host name
# db.host=
# Linkage: This property is ignored when db.url is used.


### Define the database port
# db.port=
# Linkage: This property is ignored when db.url is used.


### Define the database name or SID (depending on the type of database)
# db.name=
# Linkage: This property is ignored when db.url is used.
# Example: db.name=ORCL
# You cannot use special characters for the database name or SID, except the underscore (_).
# You can enter up to 30 characters for the database name or SID.


### Define the name of the database user
# db.username=
# This user name is required when you use the option to create a database. 
# The username is required also when connecting to an existing schema, the difference is 
# that it’s not being created during the installation.
# The user name is created by the installer and eventually used by HP OO.
# Example: db.username=joe
# In Oracle, do not use SYS, SYSTEM, or other administrative account credentials. 
# In Microsoft SQL Server, do not use sa or other administrative account credentials.
# In PostgreSQL, do not use postgres credentials.
# PostgreSQL database names are case-sensitive.


### Define the password of the database user
# db.password=
# This password is required when you use the option to create a database. 
# The password is required also when connecting to an existing schema, the difference is 
# that it’s not being created during the installation.
# The password is created by the installer and eventually used by HP OO.
# Example: db.password=pass
# In Oracle, do not use SYS, SYSTEM, or other administrative account credentials. 
# In Microsoft SQL Server, do not use sa or other administrative account credentials.
# In PostgreSQL, do not use postgres credentials.


### Specify whether to create the database schema during installation
# To create the database schema you must provide the admin user credentials. This is a database user capable of
# creating a schema or database. Usually, this is a DBA user or a system user
# db.create-schema=
# Valid values: true, false
# Default: false


### Define the admin user of the database
# db.admin.username=
# Used to create a schema/database/user
# Example: db.admin.username=postgres

### Define the database admin user password
# db.admin.password=
# Used to create a schema/database/user
# Example: db.admin.password=manager
	

### Define the default tablespace name for the created user (Oracle only)
# db.tablespace= 
# Example: db.tablespace=USERS
# Linkage: Only used when creating a schema (user) in an Oracle database


### Define the default temporary tablespace name (Oracle only)
# db.temp.tablespace=
# Example: db.temp.tablespace=TEMP
# Linkage: Only used when creating a schema (user) in an Oracle database


### Define the database connection type (Oracle only)
# Valid values: sid, service
# Default value: sid
# db.oracle.connection.type=
# Example: db.oracle.connection.type=sid
# Linkage: Only used when setting up an Oracle database 


### Define the database service name (Oracle only)
# db.service.name=
# Example: db.service.name=orcl_name
# Linkage: Only used when db.oracle.connection.type=service
	

### Define the database SID (Oracle only)
# db.name=
# Example: db.name=orcl_sid
# Linkage: Only used when db.oracle.connection.type=sid
 	


########################################
####
#### Upgrading from HP OO 9
####
#### The Upgrade Properties are Relevant to the First Installed Central in a Cluster, or to a Standalone Central

# Note; When you are upgrading from a remote 9.x Central that has localhost as the database in the
# Central.properties file using a silent installation, installation and upgrade do not complete
# successfully. This problem does not exist for wizard installations.


### Specify Whether an upgrade from HP OO 9.x should be performed. 
# upgrade.required=
# Valid values: true, false
# Default: false


### Define the upgrade source from where to perform the upgrade
# upgrade.source=
# Valid values: files, directory, database
# files: You need to provide the files from the 9.x installation regardless of whether it is installed on the same computer as 10.x or not. 
# The files are located on 9.x machine under the path <9.x installation folder>/Central/conf/ and can be copied on the 10.x installation machine or on a shared resource.
# directory: You need to provide the 9.x installation directory. This can be on the same computer or shared (SMB, NFS) and mounted on the 10.x computer. 
# database: You only need to provide the 9.x database properties
# Example: upgrade.source=files


### Define the location of the Central properties, in an upgrade
# upgrade.central.properties.location=
# Linkage: This needs to specified if upgrade.source=files
# This location should point to the mounted 9.x installation folder or where these files where copied from 9.x
# Example: upgrade.central.properties.location=<shared path>/Central.properties


### Define the location of the central-secured.properties, in an upgrade
# upgrade.central-secure.properties.location=
# Linkage: This needs to specified if upgrade.source=files
# This location should point to the mounted 9.x installation folder or where these files where copied from 9.x
# Example: upgrade.central-secure.properties.location=<shared path>/central-secured.properties

 

### Define the 9.x installation home directory, in an upgrade
# upgrade.9x.home.location=
# Linkage: This needs to specified if upgrade.source=directory
# Example: upgrade.9x.home.location=c:/Program Files/Hewlett-Packard/Operations Orchestration


### Define the 9.x database type, in an upgrade
# upgrade.db.type=
# Valid values: oracle, mssql, or mysql
# Linkage: This needs to specified if upgrade.source=database	
# Required if HP OO 9.x is running over a MySQL database (regardless of
# upgrade.source).Otherwise, not needed.
# Example: upgrade.db.type=mysql
 

### Define the 9.x database host name, in an upgrade
# upgrade.db.host=	
# Linkage: This needs to specified if upgrade.source=database
# Example: upgrade.db.host=ninexdb


### Define the 9.x database port number, in an upgrade
# upgrade.db.port=
# Linkage: This needs to specified if upgrade.source=database
# Example:upgrade.db.port=1521
 

### Define the 9.x database name/SID, in an upgrade
# upgrade.db.name=	
# Linkage: This needs to specified if upgrade.source=database
# Example:upgrade.db.name=ORCL


### Define the 9.x database user name, in an upgrade
# upgrade.db.username=
# Linkage: This needs to specified if upgrade.source=database 


### Define the 9.x database password, in an upgrade
# upgrade.db.password=
# Linkage: This needs to specified if upgrade.source=database 

 
### Specify the location of the JDBC driver, in an upgrade
# upgrade.db.driver.location=
# Linkage: Required if HP OO 9.x is running over a MySQL database (regardless of
# upgrade.source). Otherwise, not needed
# Exampe: upgrade.db.driver.location=C:/tmp/mysql-connector-java-5.1.21.jar


	
########################################
####
#### Properties Relevant to a Standalone Central, RAS, Studio 
####
	

### Define whether the SSl certificate is user-provided or self-signed
# ssl.certificate.type=
# Valid values: self-signed, user-provided
# Linkage: If you chose to set ssl.certificate.type to be user-provided, you must also set a 
# value for ssl.user-provided-root-certificate.location
# Example: ssl.certificate.type=self-signed


### Specify the location of the user-provided keystore with the server certificate 
# ssl.user-keystore.location=
# This must be in PKCS12 format
# On  Windows, the path can use either / or \\
# Example: ssl.user-keystore.location=c:/tmp/certificate.p12/pfx


### Define the password for the user-provided keystore with service certificate
# ssl.user-keystore.password=

### Specify the location of the root certificate to be imported. 
# ssl.user-provided-root-certificate.location=
# Needed only if Central was installed with different certificates than self-signed.
# The root certificate must be in .cer or .crt format
# Linkage: If you chose to set ssl.certificate.type to be user-provided for Central, and if you 
# chose to install both Central and RAS, you must set a 
# value for ssl.user-provided-root-certificate.location
# Example: ssl.user-provided-root-certificate.location=c:/tmp/my.cer 
# Example: ssl.user-provided-root-certificate.location=c:\\tmp\\my.cer

	
########################################
####
#### Properties Relevant to a Central Node in a Cluster, But Not to the First Installed Central
####


#### Determine if this is a cluster installation
# central.cluster=
# Valid values: true, false
# Default: false


#### Specify the absolute path of the database.properties file
# central.cluster.database.properties=
# Absolute path of the database.properties file on the local machine, copied from an existing node 
# in HP OO 10.x, from <10.x installation>/central/conf. 
# Example: central.cluster.database.properties=C:/<installation>/central/conf/database.properties


#### Specify the absolute path of the encryption.properties file
# central.cluster.encryption.properties=
# Absolute path of the encryption.properties file on the local machine, copied from an existing node 
# in HP OO 10.x, from <10.x installation>/central/var/security
# Example:central.cluster.encryption.properties=C:/<installation>/central/var/security/encryption.properties


#### Specify the absolute path of the encryption_repository 
# central.cluster.encryption_repository=
# Absolute path of the encryption_repository file on the local machine, copied from an existing node 
# in HP OO 10.x, from <10.x installation>/central/var/security
# Example: central.cluster.encryption_repository=C:/<installation>/central/var/security/encryption_repository



# db.driver.location=
# When using a MySQL database (in either HP OO 10 or in an upgraded HP OO 9), it
# would normally be required to set this property. However, when installing a
# cluster node, this property is ignored due to an issue in the 10.00 installer.
# Therefore, you must manually copy the file to <installation>/central/lib and
# <installation>/central/tomcat/lib after the installation, then start the node.
# db.driver.location=C:/Users/admin/Desktop/mysql-connector-java-5.1.21.jar


### Whether to start Central after the installation
# should.start.central=
# Valid values: true, false
# If you are installing a new Central in cluster mode and the installer version is older 
# than the current Central, this must be set to false.

	

########################################
####
#### Installing a  standard RAS
####
#### Root directory of the installation:
# root.dir=C:/Program Files/Hewlett-Packard/HP Operations Orchestration

#### What to install:
# install.java=true
# install.central=false
# install.ras=true
# install.studio=false


#### Define the Central connection properties - used to connect the RAS to the central
# central.url=
# In the formats: http://<server-FQDN> or <IP address>:<HTTP_PORT>/oo
# Example: central.url=http://16.59.62.205:8293/oo
# If you are using a cluster, this should be the load balancer's URL:
# central.url=https://74.125.225.240:8443/oo


#### Define whether or not access to Central requires an HTTP proxy
# central.proxy=
# Valid values: no, manual
# Default: no

### Define the HTTP proxy host name for connecting to Central.
# central.proxy-hostname= 
# Example: proxy-hostname=myhost


### Define the HTTP proxy port for connecting to Central
# central.proxy-port= 
# central.proxy-port=880


### Define the HTTP proxy user name for connecting to Central, if proxy requires authentication.
# central.proxy-username= 


### Define the HTTP proxy password for connecting to Central, if needed.
# central.proxy-password= 


### Specify whether the Central is password protected
# central.secured=
# valid values for central.secured: true, false 
# Default: true


### Define the Central user name that has MANAGE_TOPOLOGY permission.
# central.username=
# Example: central.username=oouser 


### Define the Central user's password
# central.password=
# Example: central.password=oopass


### Define whether the RAS requires a SSL user-provided certificate to register
# ssl.certificate.type=
# Valid values: self-signed, user-provided
# Linkage: If your Central was installed with a user provided certificate 
# set this value to user-provided and also provide a
# value for ssl.user-provided-root-certificate.location
# Example: ssl.certificate.type=self-signed


### Specify the location of the root certificate to be imported. 
# ssl.user-provided-root-certificate.location=
# Needed only if Central was installed with different certificates than self-signed.
# The root certificate must be in .cer or .crt format
# Linkage: If you chose to set ssl.certificate.type to be user-provided for Central, and if you 
# chose to install both Central and RAS, you must set a 
# value for ssl.user-provided-root-certificate.location
# Example: ssl.user-provided-root-certificate.location=c:/tmp/my.cer 
# Example: ssl.user-provided-root-certificate.location=c:\\tmp\\my.cer


### Specify whether the X.509 client certificate should be provided by the RAS to Central
# ssl.client.certificate=
# Valid values: true, false
# Default: false
# This must be provided when Central requires an X.509 certificate from the client as a part of the SSL handshake. 


### Define the full path to the X.509 client certificate location of a user capable of registering a RAS
# ssl.user.client.certificate.location=
# On Windows, the path must be with / or with \\
 
 
### Define the X.509 client certificate password 
# ssl.user.client.certificate.password=



### Define the full path to the X.509 client certificate location 
# ssl.user-provided-client-certificate.location=
# On Windows, the path must be with / or with \\



### Define the X.509 client certificate password 
# ssl.client.certificate.password=


### Define the UUID of the RAS
# ssl.client.certificate.ras.uuid=
# If Central requires an X.509 client certificate, you need to generate it.
# The X.509 client certificate needs to have the principal name of the RAS, which is 
# the RAS UUID (see "Processing a Certificate Principal" in the HP OO System 
# Security and Hardening Guide).
# This must be in the UUID format.
# You must generate the UUID and provide it here. 
# Example of UUID format: c7fd89e1-d703-44a1-b067-732b8ebbfe23


### Define the connectivity direction of the RAS
### This determines whether the RAS initiates the connection to Central (standard RAS) 
### or whether the RAS waits for Central to initiate the connection (reverse RAS) 
# register.ras=true
# Valid values: true, false                                                                                
# true = standard RAS, false = reverse RAS

########################################
####
#### Installing a  reverse RAS
####
#### Root directory of the installation:
# root.dir=C:/Program Files/Hewlett-Packard/HP Operations Orchestration

#### What to install:
# install.java=true
# install.central=false
# install.ras=true
# install.studio=false

### Define the connectivity direction of the RAS
### This determines whether the RAS initiates the connection to Central (standard RAS) 
### or whether the RAS waits for Central to initiate the connection (reverse RAS) 
# register.ras=false
# Valid values: true, false                                                                                
# true = standard RAS, false = reverse RAS

# shared.secret=                                                                         
# For a reverse RAS, enter the shared secret that will be used by Central, to communicate with this RAS   
     
# ras.server.address=                                           
# Enter the IP address of the reverse RAS
# Example: ras.server.address=16.60.234.64

# ras.connectivity.protocol=     
# Enter the protocol of the reverse RAS
# Valid values: HTTPS, HTTP    
# Example: ras.connectivity.protocol=HTTPS  
               
# ras.connectivity.central.initiates.https.port=               
# Enter the https port number of the reverse RAS (if protocol == HTTPS)
# Example: ras.connectivity.central.initiates.https.port=8443 
          
# ras.connectivity.central.initiates.http.port=                
# Enter the http port number of the reverse RAS(if protocol == HTTP)
# Example: ras.connectivity.central.initiates.http.port=8080        

### Define whether the SSl certificate is user-provided or self-signed
# ssl.certificate.type=
# Valid values: self-signed, user-provided
# Linkage: If you chose to set ssl.certificate.type to be user-provided, you must also set a 
# value for ssl.user-provided-root-certificate.location
# Example: ssl.certificate.type=self-signed


### Specify the location of the user-provided keystore with the server certificate 
# ssl.user-keystore.location=
# This must be in PKCS12 format
# On  Windows, the path can use either / or \\
# Example: ssl.user-keystore.location=c:/tmp/certificate.p12/pfx


### Define the password for the user-provided keystore with service certificate
# ssl.user-keystore.password=



########################################
####
#### Studio properties
####
#### Root directory of the installation:
root.dir=C:/Program Files/Hewlett-Packard/HP Operations Orchestration

#### What to install:
install.java=true
install.central=false
install.ras=false
install.studio=true



### Specify the content packs to be imported to Studio
# studio.content.packs=
# Optional - use this if you want to auto-import CPs on first Studio startup. 
# Absolute paths to the needed CPs, separated by comma.
# Example: studio.content.packs=C:/tmp/oo10-base-cp-1.0.142.jar,C:/tmp/my-cp-1.0.0.jar


